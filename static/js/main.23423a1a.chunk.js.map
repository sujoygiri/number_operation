{"version":3,"sources":["components/Alerts.js","components/Navbar.js","components/NumberNButton.js","App.js","reportWebVitals.js","index.js"],"names":["Alerts","props","alert","className","role","message","Navbar","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onChange","toggleMode","htmlFor","NumberNButton","useState","number","setNumber","value","e","target","min","onClick","showAlert","flag","i","disable","rem","sum","n","temp","Math","floor","fact","App","setAlert","setDisable","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23423a1a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alerts(props) {\r\n  return (\r\n    props.alert && <div className=\"container\">\r\n      <div className=\"alert alert-info container\" role=\"alert\">\r\n        {props.alert.message}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alerts;\r\n","import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"/navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch \">\r\n            <input\r\n              className=\"form-check-input \"\r\n              onChange={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"dark_btn\"\r\n            />\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n              htmlFor=\"dark_btn\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction NumberNButton(props) {\r\n  // eslint-disable-next-line\r\n  const [number, setNumber] = useState(1);\r\n\r\n  const checkPrime = () => {\r\n    if (number < 0) {\r\n      props.showAlert(\r\n        \"Your entering value is less than 0 which is not allowed!!\"\r\n      );\r\n    } else if (number === 0) {\r\n      props.showAlert(`${number} is Not Prime Number`);\r\n    } else {\r\n      let flag = 0;\r\n      for (let i = 2; i <= number / 2; i++) {\r\n        if (number % i === 0) {\r\n          flag = 1;\r\n          break;\r\n        } else {\r\n          flag = 0;\r\n        }\r\n      }\r\n      if (flag === 0) {\r\n        props.showAlert(`${number} is Prime Number`);\r\n      } else {\r\n        props.showAlert(`${number} is Not Prime Number`);\r\n      }\r\n    }\r\n  };\r\n  const palindromeCheck = () => {\r\n    let rem;\r\n    let sum = 0;\r\n    let n = number;\r\n    let temp = number;\r\n    if (number < 0) {\r\n      props.showAlert(\r\n        \"Your entering value is less than 0 which is not allowed!!\"\r\n      );\r\n    } else {\r\n      while (temp !== 0) {\r\n        rem = temp % 10;\r\n        temp = Math.floor(temp / 10);\r\n        sum = sum * 10 + rem;\r\n      } // eslint-disable-next-line\r\n      if (n == sum) {\r\n        props.showAlert(`${number} is a Palindrome Number`);\r\n      } else {\r\n        props.showAlert(`${number} is not a Palindrome Number`);\r\n      }\r\n    }\r\n  };\r\n  const reverse = () => {\r\n    let rem;\r\n    let sum = 0;\r\n    let temp = number;\r\n    if (number < 0) {\r\n      props.showAlert(\r\n        \"Your entering value is less than 0 which is not allowed!!\"\r\n      );\r\n    } else {\r\n      while (temp !== 0) {\r\n        rem = temp % 10;\r\n        temp = Math.floor(temp / 10);\r\n        sum = sum * 10 + rem;\r\n      } // eslint-disable-next-line\r\n      props.showAlert(`Reverse of ${number} is ${sum}`);\r\n    }\r\n  };\r\n  const factorial = () => {\r\n    if (number < 0) {\r\n      props.showAlert(\r\n        \"Your entering value is less than 0 which is not allowed!!\"\r\n      );\r\n    } // eslint-disable-next-line\r\n    else if(number > 21){\r\n      props.showAlert(\r\n        \"Your entering value is too high to calculate the factorial!!\"\r\n      );\r\n    }// eslint-disable-next-line\r\n    else if (number == 0 || number == 1) {\r\n      props.showAlert(`is ${1}`);\r\n    } else {\r\n      let fact = 1;\r\n      for (let i = 2; i <= number; i++) {\r\n        fact *= i;\r\n      }\r\n      props.showAlert(`is ${fact}`);\r\n    }\r\n  };\r\n  const amstrongCheck = () => {\r\n    let rem;\r\n    let sum = 0;\r\n    let n = number;\r\n    let temp = number;\r\n    while (temp) {\r\n      rem = temp % 10;\r\n      temp = temp / 10;\r\n      sum = sum + rem * rem * rem;\r\n    }\r\n    // eslint-disable-next-line\r\n    if (n == sum) {\r\n      props.showAlert(`${number} is a Amstrong number`);\r\n    } else {\r\n      props.showAlert(`${number} is not a Amstrong number`);\r\n    }\r\n  };\r\n  const enterValue = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container mb-3 my-4\">\r\n        <label htmlFor=\"user_input\" className=\"form-label\">\r\n          Enter your number below\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={number}\r\n          onChange={enterValue}\r\n          className=\"form-control\"\r\n          id=\"user_input\"\r\n          min={1}\r\n        />\r\n        <div className=\"my-4\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={checkPrime}\r\n            className={`btn btn-success my-2 ${props.disable}`}\r\n          >\r\n            Prime Check\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={palindromeCheck}\r\n            className={`btn btn-success my-2 ${props.disable} mx-2`}\r\n          >\r\n            Palindrome Check\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={amstrongCheck}\r\n            className={`btn btn-success my-2 ${props.disable}`}\r\n          >\r\n            Amstrong Check\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={factorial}\r\n            className={`btn btn-success my-2 ${props.disable} mx-2`}\r\n          >\r\n            Factoral Of {number}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={reverse}\r\n            className={`btn btn-success my-2 ${props.disable}`}\r\n          >\r\n            Reverse Of {number}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NumberNButton;\r\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Alerts from './components/Alerts';\nimport Navbar from './components/Navbar';\nimport NumberNButton from './components/NumberNButton';\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [disable, setDisable] = useState(null);\n  const showAlert = (message) =>{\n    setAlert({\n      message:message\n    })\n    setDisable('disabled')\n    setTimeout(() => {\n      setAlert(null);\n      setDisable(null)\n    }, 3000);\n  }\n  return (\n    <>\n    <Navbar/>\n    <NumberNButton showAlert={showAlert} disable={disable}/>\n    <Alerts alert={alert}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}